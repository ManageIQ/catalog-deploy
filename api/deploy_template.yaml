apiVersion: v1
kind: Template
labels:
  template: catalog-api
metadata:
  name: catalog-api
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: catalog-api
    labels:
      app: catalog
  spec:
    ports:
    - name: catalog-api
      port: 8080
      targetPort: 3000
    selector:
      name: catalog-api
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: catalog-api
    labels:
      app: catalog
  spec:
    replicas: 1
    selector:
      name: catalog-api
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: '3000'
          prometheus.io/scrape: 'true'
        name: catalog-api
        labels:
          app: catalog
          name: catalog-api
      spec:
        containers:
        - name: catalog-api
          image: ${IMAGE_NAMESPACE}/catalog-api:latest
          ports:
          - containerPort: 3000
          env:
          - name: APP_NAME
            value: ${APP_NAME}
          - name: APPROVAL_URL
            value: ${APPROVAL_SCHEME}://${APPROVAL_HOST}:${APPROVAL_PORT}
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: catalog-db
                key: hostname
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: catalog-db
                key: password
          - name: DATABASE_PORT
            value: "5432"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: catalog-db
                key: username
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: catalog-api-secrets
                key: encryption-key
          - name: PATH_PREFIX
            value: ${PATH_PREFIX}
          - name: SECRET_KEY_BASE
            valueFrom:
              secretKeyRef:
                name: catalog-api-secrets
                key: secret-key
          - name: TOPOLOGICAL_INVENTORY_URL
            value: ${TOPOLOGICAL_INVENTORY_SCHEME}://${TOPOLOGICAL_INVENTORY_HOST}:${TOPOLOGICAL_INVENTORY_PORT}
          - name: QUEUE_HOST
            value: ${QUEUE_HOST}
          - name: QUEUE_PORT
            value: "9092"
          - name: RBAC_URL
            value: ${RBAC_SCHEME}://${RBAC_HOST}:${RBAC_PORT}
          readinessProbe:
            tcpSocket:
              port: 3000
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - catalog-api
          from:
            kind: ImageStreamTag
            name: catalog-api:latest
            namespace: ${IMAGE_NAMESPACE}
parameters:
- name: APP_NAME
  displayName: Application Name
  description: Application name to be used in request paths. Only used when PATH_PREFIX is also specified.
  value: catalog
- name: APPROVAL_HOST
  displayName: Approval Service Host
  description: Host to use for the approval URL.
  required: true
- name: APPROVAL_PORT
  displayName: Approval Service Port
  description: Port to use for the approval service URL.
  required: true
  value: "8080"
- name: APPROVAL_SCHEME
  displayName: Approval Service Scheme
  description: Scheme to use for the approval service URL. Can be either http or https
  required: true
  value: http
- name: IMAGE_NAMESPACE
  displayName: Image Namespace
  description: Namespace which contains the image stream to pull from
  value: buildfactory
- name: PATH_PREFIX
  displayName: Path Prefix
  description: Base path for the API
- name: TOPOLOGICAL_INVENTORY_HOST
  displayName: Topological Inventory Host
  description: Host to use for the topological inventory service URL.
  required: true
- name: TOPOLOGICAL_INVENTORY_PORT
  displayName: Topological Inventory Port
  description: Port to use for the topological inventory service URL.
  required: true
  value: "8080"
- name: TOPOLOGICAL_INVENTORY_SCHEME
  displayName: Topological Inventory Scheme
  description: Scheme to use for the topological inventory service URL. Can be either http or https
  required: true
  value: http
- name: QUEUE_HOST
  displayName: Message Queue Hostname
  description: Hostname which will be used to contact the message queue.
  required: true
- name: RBAC_HOST
  displayName: Rbac Service Host
  description: Host to use for the RBAC service URL.
  required: true
- name: RBAC_PORT
  displayName: Rbac Service Port
  description: Port to use for the RBAC service URL.
  required: true
  value: "8080"
- name: RBAC_SCHEME
  displayName: Rbac Service Scheme
  description: Scheme to use for the RBAC service URL. Can be either http or https
  required: true
  value: http
